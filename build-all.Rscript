#!/usr/bin/env Rscript

# Quit and return non-zero status code on error.
options(
    error = quote(quit(status = 1L)),
    verbose = TRUE
)

# This will include the `--file` flag we want to match to get the script source.
args <- commandArgs(trailingOnly = FALSE)
# This will return only the positional arguments.
posArgs <- commandArgs(trailingOnly = TRUE)

# Get the script path from the command arguments.
fileFlag <- "--file="
fileArg <- args[grep(fileArg, args)]
rscript <- sub(pattern = fileFile, replacement = "", x = fileArg)
baseDir <- dirname(rscript)

# Specify the image name as a positional argument.
image <- posArgs[[1L]]
stopifnot(
    is.character(image),
    dir.exists(image)
)
tags <- sort(list.dirs(path = image, full.names = FALSE, recursive = FALSE))
stopifnot(length(tags) > 0L)

mapply(
    tag = tags,
    MoreArgs = list(image = image),
    FUN = function(image, tag) {
        command <- paste(
            file.path(baseDir, "build.sh"),
            image, tag
        )
        print(command)
        system(command = command)
    },
    USE.NAMES = FALSE,
    SIMPLIFY = FALSE
)
